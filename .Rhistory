knitr::opts_chunk$set(echo = TRUE)
#----------------------------------------------------------------------------#
#                                                                            #
# Household Sampling Applications Assignment #3                              #
#                                                                            #
#    Riley Fedewa         March 31 2023                                      #
#                                                                            #
#                                                                            #
#                                                                            #
#----------------------------------------------------------------------------#
# loading required libraries ----
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(boot)
library(class)
library(cluster)
library(codetools)
library(compiler)
detach("package:datasets", unload = TRUE)
library(datasets)
library(foreign)
library(grid)
library(KernSmooth)
library(lattice)
library(MASS)
library(Matrix)
library(mgcv)
library(nnet)
library(parallel)
library(rpart)
library(spatial)
library(splines)
library(stats4)
library(survival)
library(tcltk)
library(tools)
install.packages(c("boot", "class", "cluster", "codetools", "compiler", "foreign", "grid", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme"))
install.packages(c("boot", "class", "cluster", "codetools", "compiler", "foreign", "grid", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme"))
install.packages(c("boot", "class", "cluster", "codetools", "compiler", "foreign", "grid", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme"))
install.packages(c("nnet", "parallel"))
install.packages(c("rpart", "spatial", "splines", "stats4", "survival", "tcltk", "tools"))
knitr::opts_chunk$set(echo = TRUE)
library(boot)
library(class)
library(cluster)
library(codetools)
library(compiler)
library(foreign)
library(grid)
library(KernSmooth)
library(lattice)
library(MASS)
library(Matrix)
library(mgcv)
library(nnet)
library(rpart)
library(parallel)
library(spatial)
library(splines)
library(stats4)
library(survival)
library(tcltk)
library(tools)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#----------------------------------------------------------------------------#
#                                                                            #
#.           Household Sampling Apps Spring 2023 Assignment 3.               #
#                                                                            #
#                      Riley Fedewa March 31 2023                            #
#                                                                            #
#    This script is a demonstration of the basic principles of               #
#    developing a literate program as well as some basics of conducting      #
#    descriptive statistics on select DHS data using correct sampling        #
#    weights and and analytical approaches                                   #
#                                                                            #
#                                                                            #
#----------------------------------------------------------------------------#
# loading required libraries ----
library(tidyverse)
library(haven)
library(formatR)
library(Hmisc)
#install.packages("survey")
library(survey)
#install.packages("srvyr")
#library(srvyr)
#install.packages("weights")
library(weights)
#set any other options ----
# print and get runtime ----
date()
# session info ----
sessionInfo()
# Import data set in .csv format and create object(data.frame) titled "kenya_2009_df"
#kenya_2009_df <- read_csv(file = "C:\\Users\\ayoung1\\OneDrive\\Documents\\PhD\\TA\\IHSD 7440 HH sampling\\2023\\RStudio Lab\\kenya2009_household_1.csv")
Zambia_HH <- read.csv(file = "C:\\Users\\FedewaRiley\\Documents\\GitHub\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
"C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
"C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv"
View(Zambia_HH)
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv"
View(Zambia_HH)
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\GitHub\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read_csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_HH <- read_csv(file = "C:/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read_csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read_csv(file = "C:/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_HH <- read_csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read_csv(file = "C:/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file , "C:/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:\Users\rileyfedewa\Documents\IHSD_7440_HH_Sampling\2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
Zambia_HH <- read.csv(file = 'C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv')
Zambia_HH <- read_csv(file = "C:\\Users\\rileyfedewa\\Documents\\IHSD_7440_HH_Sampling\\2007_Zambia_HH_2023.csv")
knitr::opts_chunk$set(echo = TRUE)
#----------------------------------------------------------------------------#
#                                                                            #
#.           Household Sampling Apps Spring 2023 Assignment 3.               #
#                                                                            #
#                      Riley Fedewa March 31 2023                            #
#                                                                            #
#    This script is a demonstration of the basic principles of               #
#    developing a literate program as well as some basics of conducting      #
#    descriptive statistics on select DHS data using correct sampling        #
#    weights and and analytical approaches                                   #
#                                                                            #
#                                                                            #
#----------------------------------------------------------------------------#
# loading required libraries ----
library(tidyverse)
library(haven)
library(formatR)
library(Hmisc)
#install.packages("survey")
library(survey)
#install.packages("srvyr")
#library(srvyr)
#install.packages("weights")
library(weights)
#set any other options ----
# print and get runtime ----
date()
# session info ----
sessionInfo()
Zambia_child <- read.csv(file = "/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_Child_2023.csv")
Zambia_HH <- read_csv(file = "/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
View(Zambia_HH)
View(Zambia_child)
names(Zambia_HH)
names(Zambia_HH)[names(Zambia_HH) == "HV022"] <- "Sample_stratum_number"
names(Zambia_HH)[names(Zambia_HH) == "HV023"] <- "Sample_domain"
names(Zambia_HH)[names(Zambia_HH) == "HV002"] <- "Household_number"
names(Zambia_HH)[names(Zambia_HH) == "HV005"] <- "Sample_weight"
names(Zambia_HH)[names(Zambia_HH) == "HV009"] <- "Number_HH_members"
names(Zambia_HH)[names(Zambia_HH) == "HV014"] <- "Number_children_5_under"
names(Zambia_HH)[names(Zambia_HH) == "HV021"] <- "Primary_sampling_unit"
names(Zambia_HH)[names(Zambia_HH) == "HV206"] <- "Has_electricity"
names(Zambia_HH)
names(Zambia_child)
names(Zambia_child)[names(Zambia_child) == "V022"] <- "Sample_stratum_number"
names(Zambia_child)[names(Zambia_child) == "V023"] <- "Sample_domain"
names(Zambia_child)[names(Zambia_child) == "V002"] <- "Household_number"
names(Zambia_child)[names(Zambia_child) == "V005"] <- "Sample_weight"
names(Zambia_child)[names(Zambia_child) == "HV021"] <- "Primary_sampling_unit"
names(Zambia_child)
names(Zambia_child)
names(Zambia_child)[names(Zambia_child) == "V022"] <- "Sample_stratum_number"
names(Zambia_child)[names(Zambia_child) == "V023"] <- "Sample_domain"
names(Zambia_child)[names(Zambia_child) == "V002"] <- "Household_number"
names(Zambia_child)[names(Zambia_child) == "V005"] <- "Sample_weight"
names(Zambia_child)[names(Zambia_child) == "V021"] <- "Primary_sampling_unit"
names(Zambia_child)
length(unique(Zambia_HH$Primary_sampling_unit))
length(unique(Zambia_child$Primary_sampling_unit))
# this line of code will return the number of unique observations (i.e number of clusters) within your primary sampling unit variable (remember clusters are our PSU here)
length(unique(Zambia_HH$Sample_domain))
length(unique(Zambia_child$Sample_domain))
#How many strata are there in this dataset?
length(unique(Zambia_HH$Sample_domain))
length(unique(Zambia_child$Sample_stratum_number))
#How many households are selected in each cluster
range(Zambia_HH$Number_HH_members)
#the code below will return the range of houses in each cluster
range=as.data.frame(table(Zambia_HH_df$Primary_sampling_unit))
length(unique(Zambia_HH$Sample_domain))
length(unique(Zambia_child$Sample_domain))
#How many strata are there in this dataset?
length(unique(Zambia_HH$Sample_domain))
length(unique(Zambia_child$Sample_stratum_number))
#How many households are selected in each cluster
range(Zambia_HH$Number_HH_members)
#the code below will return the range of houses in each cluster
range=as.data.frame(table(Zambia_HH$Primary_sampling_unit))
diff(range.default(range))
min(range$Freq)
max(range$Freq)
Zambia_HH$pw<- Zambia_HH$Sample_weight/1000000
Zambia_child$pw<- Zambia_child$Sample_weight/1000000
#Here we are creating a new variable "pw" in our primary data set that corresponds with the calculated weight
#1) Urban versus rural settings
#If we want to calculate the proportions and standard errors individually we can take our main data set and create a subset of samples for Urban versus Rural categorizations
Urban.ITN <- subset(Zambia_HH, subset=(HH_residence=="Urban"))#creates subset featuring only HHs in urban areas
attach(Urban.ITN)# makes objects in data frames (urban subset) accessible without actually typing the name of the data frame
Rural.ITN <- subset(Zambia_HH, subset=(HH_residence=="Rural")) #creates subset featuring only HHs in rural areas
attach(Rural.ITN)# make objects in data frames accessible (rural subset) without actually typing the name of the data frame
#Now we want to calculate the proportion (and standard error) of HHs in urban areas that have electricity:
mean.urban <- mean(Urban.ITN$HH_has_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.urban #prints results
se.urban <-sqrt(var(Urban.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Urban.ITN$HH_has_ITN)))#calculates standard error
se.urban# prints results
#And in rural areas
mean.rural <- mean(Rural.ITN$HH_has_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.rural #prints results
se.rural <-sqrt(var(Rural.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Rural.ITN$HH_has_ITN)))#calculates standard error
se.rural# prints results
