se.urban <-sqrt(var(Urban.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Urban.ITN$HH_has_ITN)))#calculates standard error
se.urban# prints results
#And in rural areas
mean.rural <- mean(Rural.ITN$HH_has_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.rural #prints results
se.rural <-sqrt(var(Rural.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Rural.ITN$HH_has_ITN)))#calculates standard error
se.rural# prints results
#2) Education level
# Using prop table approach (no standard errors)
edu_electricity <- table(kenya_2009_df$HH_head_education,kenya_2009_df$Has_electricity)
#2) Education level
# Using prop table approach (no standard errors)
#edu_electricity <- table(kenya_2009_df$HH_head_education,kenya_2009_df$Has_electricity)
#prop.table(edu_electricity,1)
#Using subset approach (means and standard errors) for each category/value under the HH_edu variable
Noedu.ITN <- subset(Zambia_HH, subset=(HH_head_education=="No education"))
attach(Noedu.ITN)
Primary.ITN <- subset(Zambia_HH, subset=(HH_head_education=="Primary"))
attach(Primary.ITN)
Secondary.ITN <- subset(Zambia_HH, subset=(HH_head_education=="Secondary"))
attach(Secondary.ITN)
Higher.ITN <- subset(Zambia_HH, subset=(HH_head_education=="Higher than"))
attach(Higher.ITN)
mean.none <- mean(Noedu.ITN$HH_has_ITN) #No education
mean.none
se.none <-sqrt(var(Noedu.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Noedu.ITN$HH_has_ITN)))
se.none
mean.primary<- mean(Primary.ITN$HH_has_ITN)#Primary
mean.primary
se.primary <-sqrt(var(Primary.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Primary.ITN$HH_has_ITN)))
se.primary
mean.secondary<- mean(Secondary.ITN$HH_has_ITN)#Secondary
mean.secondary
se.secondary <-sqrt(var(Secondary.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Secondary.ITN$HH_has_ITN)))
se.secondary
mean.higher <- mean(Higher.ITN$HH_has_ITN)#Higher than
mean.higher
se.higher <-sqrt(var(Higher.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Higher.ITN$HH_has_ITN)))
se.higher
#SES LEVEL
poorest.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Lowest"))
attach(poorest.ITN)
poorer.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Second"))
attach(poorer.ITN)
middle.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Middle"))
attach(middle.ITN)
richer.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Fourth"))
attach(richer.ITN)
richest.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Highes"))
attach(richest.ITN)
mean.poorest <- mean(poorest.ITN$HH_has_ITN) #poorest
mean.poorest
se.poorest <-sqrt(var(poorest.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(poorest.ITN$HH_has_ITN)))
se.poorest
mean.poorer<- mean(poorer.ITN$HH_has_ITN)#Poorer
mean.poorer
se.poorer <-sqrt(var(poorer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(poorer.ITN$HH_has_ITN)))
se.poorer
mean.middle<- mean(middle.ITN$HH_has_ITN)#middle
mean.middle
se.middle <-sqrt(var(middle.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(middle.ITN$HH_has_ITN)))
se.middle
mean.richer <- mean(richer.ITN$HH_has_ITN)#richer
mean.richer
se.richer <-sqrt(var(richer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(richer.ITN$HH_has_ITN)))
se.richer
#review your code here, looks like you ran it again for the 4th category, not richest
mean.richer <- mean(richer.ITN$HH_has_ITN)#richest
mean.richer
se.richer <-sqrt(var(richer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(richer.ITN$HH_has_ITN)))
se.richer
#All HH
mean(Zambia_HH$HH_has_ITN)
se <-sqrt(var(Zambia_HH$HH_has_ITN,na.rm=TRUE)/length(na.omit(Zambia_HH$HH_has_ITN)))
se
#SES LEVEL
poorest.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Lowest"))
attach(poorest.ITN)
poorer.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Second"))
attach(poorer.ITN)
middle.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Middle"))
attach(middle.ITN)
richer.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Fourth"))
attach(richer.ITN)
richest.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Highes"))
attach(richest.ITN)
mean.poorest <- mean(poorest.ITN$HH_has_ITN) #poorest
mean.poorest
se.poorest <-sqrt(var(poorest.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(poorest.ITN$HH_has_ITN)))
se.poorest
mean.poorer<- mean(poorer.ITN$HH_has_ITN)#Poorer
mean.poorer
se.poorer <-sqrt(var(poorer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(poorer.ITN$HH_has_ITN)))
se.poorer
mean.middle<- mean(middle.ITN$HH_has_ITN)#middle
mean.middle
se.middle <-sqrt(var(middle.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(middle.ITN$HH_has_ITN)))
se.middle
mean.richer <- mean(richer.ITN$HH_has_ITN)#richer
mean.richer
se.richer <-sqrt(var(richer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(richer.ITN$HH_has_ITN)))
se.richer
mean.richest <- mean(richest.ITN$HH_has_ITN)#richest
mean.richest
se.richest <-sqrt(var(richest.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(richest.ITN$HH_has_ITN)))
se.richest
#All HH
mean(Zambia_HH$HH_has_ITN)
se <-sqrt(var(Zambia_HH$HH_has_ITN,na.rm=TRUE)/length(na.omit(Zambia_HH$HH_has_ITN)))
se
knitr::opts_chunk$set(echo = TRUE)
#----------------------------------------------------------------------------#
#                                                                            #
#.           Household Sampling Apps Spring 2023 Assignment 3.               #
#                                                                            #
#                      Riley Fedewa March 31 2023                            #
#                                                                            #
#    This script is a demonstration of the basic principles of               #
#    developing a literate program as well as some basics of conducting      #
#    descriptive statistics on select DHS data using correct sampling        #
#    weights and and analytical approaches                                   #
#                                                                            #
#                                                                            #
#----------------------------------------------------------------------------#
# loading required libraries ----
library(tidyverse)
library(haven)
library(formatR)
library(Hmisc)
#install.packages("survey")
library(survey)
#install.packages("srvyr")
#library(srvyr)
#install.packages("weights")
library(weights)
#set any other options ----
# print and get runtime ----
date()
# session info ----
sessionInfo()
# Import data set in .csv format and create object(data.frame) titled "kenya_2009_df"
#kenya_2009_df <- read_csv(file = "C:\\Users\\ayoung1\\OneDrive\\Documents\\PhD\\TA\\IHSD 7440 HH sampling\\2023\\RStudio Lab\\kenya2009_household_1.csv")
Zambia_HH <- read_csv(file = "/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_HH_2023.csv")
Zambia_child <- read.csv(file = "/Users/rileyfedewa/Documents/IHSD_7440_HH_Sampling/2007_Zambia_Child_2023.csv")
# View data set in new window
View(Zambia_HH)
View(Zambia_child)
describe(Zambia_HH)
describe(Zambia_child)
# HOUSEHOLD
names(Zambia_HH)
names(Zambia_HH)[names(Zambia_HH) == "HV022"] <- "Sample_stratum_number"
names(Zambia_HH)[names(Zambia_HH) == "HV023"] <- "Sample_domain"
names(Zambia_HH)[names(Zambia_HH) == "HV002"] <- "Household_number"
names(Zambia_HH)[names(Zambia_HH) == "HV005"] <- "Sample_weight"
names(Zambia_HH)[names(Zambia_HH) == "HV009"] <- "Number_HH_members"
names(Zambia_HH)[names(Zambia_HH) == "HV014"] <- "Number_children_5_under"
names(Zambia_HH)[names(Zambia_HH) == "HV021"] <- "Primary_sampling_unit"
names(Zambia_HH)[names(Zambia_HH) == "HV206"] <- "Has_electricity"
names(Zambia_HH)
describe(Zambia_HH)
#IndivIDUl level - child dataset
names(Zambia_child)
names(Zambia_child)[names(Zambia_child) == "V022"] <- "Sample_stratum_number"
names(Zambia_child)[names(Zambia_child) == "V023"] <- "Sample_domain"
names(Zambia_child)[names(Zambia_child) == "V002"] <- "Household_number"
names(Zambia_child)[names(Zambia_child) == "V005"] <- "Sample_weight"
names(Zambia_child)[names(Zambia_child) == "V021"] <- "Primary_sampling_unit"
names(Zambia_child)
describe(Zambia_child)
length(unique(Zambia_HH$Sample_domain))
length(unique(Zambia_child$Sample_domain))
#How many strata are there in this dataset?
length(unique(Zambia_HH$Sample_domain))
length(unique(Zambia_child$Sample_stratum_number))
#How many households are selected in each cluster
range(Zambia_HH$Number_HH_members)
#the code below will return the range of houses in each cluster
range=as.data.frame(table(Zambia_HH$Primary_sampling_unit))
diff(range.default(range))
min(range$Freq)
max(range$Freq)
Zambia_HH$pw<- Zambia_HH$Sample_weight/1000000
Zambia_child$pw<- Zambia_child$Sample_weight/1000000
#Here we are creating a new variable "pw" in our primary data set that corresponds with the calculated weight
#1) Urban versus rural settings
#If we want to calculate the proportions and standard errors individually we can take our main data set and create a subset of samples for Urban versus Rural categorizations
Urban.ITN <- subset(Zambia_HH, subset=(HH_residence=="Urban"))#creates subset featuring only HHs in urban areas
attach(Urban.ITN)# makes objects in data frames (urban subset) accessible without actually typing the name of the data frame
Rural.ITN <- subset(Zambia_HH, subset=(HH_residence=="Rural")) #creates subset featuring only HHs in rural areas
attach(Rural.ITN)# make objects in data frames accessible (rural subset) without actually typing the name of the data frame
#Now we want to calculate the proportion (and standard error) of HHs in urban areas that have electricity:
mean.urban <- mean(Urban.ITN$HH_has_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.urban #prints results
se.urban <-sqrt(var(Urban.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Urban.ITN$HH_has_ITN)))#calculates standard error
se.urban# prints results
#And in rural areas
mean.rural <- mean(Rural.ITN$HH_has_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.rural #prints results
se.rural <-sqrt(var(Rural.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Rural.ITN$HH_has_ITN)))#calculates standard error
se.rural# prints results
#2) Education level
# Using prop table approach (no standard errors)
#edu_electricity <- table(kenya_2009_df$HH_head_education,kenya_2009_df$Has_electricity)
prop.table(edu_electricity,1)
#2) Education level
# Using prop table approach (no standard errors)
#edu_electricity <- table(kenya_2009_df$HH_head_education,kenya_2009_df$Has_electricity)
#prop.table(edu_electricity,1)
#Using subset approach (means and standard errors) for each category/value under the HH_edu variable
Noedu.ITN <- subset(Zambia_HH, subset=(HH_head_education=="No education"))
attach(Noedu.ITN)
Primary.ITN <- subset(Zambia_HH, subset=(HH_head_education=="Primary"))
attach(Primary.ITN)
Secondary.ITN <- subset(Zambia_HH, subset=(HH_head_education=="Secondary"))
attach(Secondary.ITN)
Higher.ITN <- subset(Zambia_HH, subset=(HH_head_education=="Higher than"))
attach(Higher.ITN)
mean.none <- mean(Noedu.ITN$HH_has_ITN) #No education
mean.none
se.none <-sqrt(var(Noedu.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Noedu.ITN$HH_has_ITN)))
se.none
mean.primary<- mean(Primary.ITN$HH_has_ITN)#Primary
mean.primary
se.primary <-sqrt(var(Primary.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Primary.ITN$HH_has_ITN)))
se.primary
mean.secondary<- mean(Secondary.ITN$HH_has_ITN)#Secondary
mean.secondary
se.secondary <-sqrt(var(Secondary.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Secondary.ITN$HH_has_ITN)))
se.secondary
mean.higher <- mean(Higher.ITN$HH_has_ITN)#Higher than
mean.higher
se.higher <-sqrt(var(Higher.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(Higher.ITN$HH_has_ITN)))
se.higher
#SES LEVEL
poorest.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Lowest"))
attach(poorest.ITN)
poorer.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Second"))
attach(poorer.ITN)
middle.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Middle"))
attach(middle.ITN)
richer.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Fourth"))
attach(richer.ITN)
richest.ITN <- subset(Zambia_HH, subset=(HH_wealth_index=="Highes"))
attach(richest.ITN)
mean.poorest <- mean(poorest.ITN$HH_has_ITN) #poorest
mean.poorest
se.poorest <-sqrt(var(poorest.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(poorest.ITN$HH_has_ITN)))
se.poorest
mean.poorer<- mean(poorer.ITN$HH_has_ITN)#Poorer
mean.poorer
se.poorer <-sqrt(var(poorer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(poorer.ITN$HH_has_ITN)))
se.poorer
mean.middle<- mean(middle.ITN$HH_has_ITN)#middle
mean.middle
se.middle <-sqrt(var(middle.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(middle.ITN$HH_has_ITN)))
se.middle
mean.richer <- mean(richer.ITN$HH_has_ITN)#richer
mean.richer
se.richer <-sqrt(var(richer.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(richer.ITN$HH_has_ITN)))
se.richer
mean.richest <- mean(richest.ITN$HH_has_ITN)#richest
mean.richest
se.richest <-sqrt(var(richest.ITN$HH_has_ITN,na.rm=TRUE)/length(na.omit(richest.ITN$HH_has_ITN)))
se.richest
#All HH
mean(Zambia_HH$HH_has_ITN)
se <-sqrt(var(Zambia_HH$HH_has_ITN,na.rm=TRUE)/length(na.omit(Zambia_HH$HH_has_ITN)))
se
#####Zambia_Child Data set############
childUrban.ITN <- subset(Zambia_child, subset=(HH_residence=="Urban"))#creates subset featuring only HHs in urban areas
attach(childUrban.ITN)# makes objects in data frames (urban subset) accessible without actually typing the name of the data frame
childRural.ITN <- subset(Zambia_child, subset=(HH_residence=="Rural")) #creates subset featuring only HHs in rural areas
attach(childRural.ITN)# make objects in data frames accessible (rural subset) without actually typing the name of the data frame
mean.urban <- mean(childUrban.ITN$Slept_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.urban #prints results
se.urban <-sqrt(var(childUrban.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(childUrban.ITN$Slept_ITN)))#calculates standard error
se.urban# prints results
#And in rural areas
mean.rural <- mean(childRural.ITN$Slept_ITN)# Calculates the proportion of people living in urban areas with electricity
mean.rural #prints results
se.rural <-sqrt(var(childRural.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(childRural.ITN$Slept_ITN)))#calculates standard error
se.rural# prints results
############Zambia_Child Data Set#################
#2) Education level
#Using subset approach (means and standard errors) for each category/value under the HH_edu variable
Noedu.ITN <- subset(Zambia_child, subset=(Mother_education=="No education"))
attach(Noedu.ITN)
Primary.ITN <- subset(Zambia_child, subset=(Mother_education=="Primary"))
attach(Primary.ITN)
Secondary.ITN <- subset(Zambia_child, subset=(Mother_education=="Secondary"))
attach(Secondary.ITN)
Higher.ITN <- subset(Zambia_child, subset=(Mother_education=="Higher than"))
attach(Higher.ITN)
mean.none <- mean(Noedu.ITN$Slept_ITN) #No education
mean.none
se.none <-sqrt(var(Noedu.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(Noedu.ITN$Slept_ITN)))
se.none
mean.primary<- mean(Primary.ITN$Slept_ITN)#Primary
mean.primary
se.primary <-sqrt(var(Primary.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(Primary.ITN$Slept_ITN)))
se.primary
mean.secondary<- mean(Secondary.ITN$Slept_ITN)#Secondary
mean.secondary
se.secondary <-sqrt(var(Secondary.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(Secondary.ITN$Slept_ITN)))
se.secondary
mean.higher <- mean(Higher.ITN$Slept_ITN)#Higher than
mean.higher
se.higher <-sqrt(var(Higher.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(Higher.ITN$Slept_ITN)))
se.higher
#SES LEVEL
poorest.ITN <- subset(Zambia_child, subset=(HH_wealth_index=="Lowest"))
attach(poorest.ITN)
poorer.ITN <- subset(Zambia_child, subset=(HH_wealth_index=="Second"))
attach(poorer.ITN)
middle.ITN <- subset(Zambia_child, subset=(HH_wealth_index=="Middle"))
attach(middle.ITN)
richer.ITN <- subset(Zambia_child, subset=(HH_wealth_index=="Fourth"))
attach(richer.ITN)
richest.ITN <- subset(Zambia_child, subset=(HH_wealth_index=="Highes"))
attach(richest.ITN)
mean.poorest <- mean(poorest.ITN$Slept_ITN) #poorest
mean.poorest
se.poorest <-sqrt(var(poorest.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(poorest.ITN$Slept_ITN)))
se.poorest
mean.poorer<- mean(poorer.ITN$Slept_ITN)#Poorer
mean.poorer
se.poorer <-sqrt(var(poorer.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(poorer.ITN$Slept_ITN)))
se.poorer
mean.middle<- mean(middle.ITN$Slept_ITN)#middle
mean.middle
se.middle <-sqrt(var(middle.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(middle.ITN$Slept_ITN)))
se.middle
mean.richer <- mean(richer.ITN$Slept_ITN)#richer
mean.richer
se.richer <-sqrt(var(richer.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(richer.ITN$Slept_ITN)))
se.richer
mean.richest <- mean(richest.ITN$Slept_ITN)#richest
mean.richest
se.richest <-sqrt(var(richest.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(richest.ITN$Slept_ITN)))
se.richest
## Child age
age0.ITN <- subset(Zambia_child, subset=(Child_age=="0"))
attach(age0.ITN)
age1.ITN <- subset(Zambia_child, subset=(Child_age=="1"))
attach(age1.ITN)
age2.ITN <- subset(Zambia_child, subset=(Child_age=="2"))
attach(age2.ITN)
age3.ITN <- subset(Zambia_child, subset=(Child_age=="3"))
attach(age3.ITN)
age4.ITN <- subset(Zambia_child, subset=(Child_age=="4"))
attach(age4.ITN)
mean.age0 <- mean(age0.ITN$Slept_ITN) #age0
mean.age0
se.age0 <-sqrt(var(age0.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(age0.ITN$Slept_ITN)))
se.age0
mean.age1<- mean(age1.ITN$Slept_ITN)#age1
mean.age1
se.age1 <-sqrt(var(age1.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(age1.ITN$Slept_ITN)))
se.age1
mean.age2<- mean(age2.ITN$Slept_ITN)#age2
mean.age2
se.age2 <-sqrt(var(age2.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(age2.ITN$Slept_ITN)))
se.age2
mean.age3 <- mean(age3.ITN$Slept_ITN)#age3
mean.age3
se.age3 <-sqrt(var(age3.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(age3.ITN$Slept_ITN)))
se.age3
mean.age4 <- mean(age4.ITN$Slept_ITN)#richest
mean.age4
se.age4 <-sqrt(var(age4.ITN$Slept_ITN,na.rm=TRUE)/length(na.omit(age4.ITN$Slept_ITN)))
se.age4
#All child
mean(Zambia_child$Slept_ITN)
se <-sqrt(var(Zambia_child$Slept_ITN,na.rm=TRUE)/length(na.omit(Zambia_child$Slept_ITN)))
se
DHS_SRS_wtd<-svydesign(ids= ~1, weights=~pw,data=Zambia_HH, nest=TRUE) #inclusion of ids= ~1 indicates no clustering (remember we are still assuming SRS at this point)
ChildDHS_SRS_wtd<-svydesign(ids= ~1, weights=~pw,data=Zambia_child, nest=TRUE) #inclusion of ids= ~1 indicates no clustering (remember we are still assuming SRS at this point)
########## ZAMBIA_HH DATA SET#############
# Has ITN in rural versus urban settings
Elect.Res.SRS <- svyby(~HH_has_ITN, ~HH_residence, DHS_SRS_wtd, svymean, na.rm=TRUE) #Residence
Elect.Res.SRS
#Has ITN by education level
ITN.Edu.SRS<- svyby(~HH_has_ITN, ~HH_head_education, DHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.Edu.SRS
#Has ITN by  SES level
ITN.SES.SRS<- svyby(~HH_has_ITN, ~HH_wealth_index, DHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.SES.SRS
#Has ITN total
Total.SRS.wtd <- svymean(~HH_has_ITN,DHS_SRS_wtd)
Total.SRS.wtd
######### Zambia_Child Data set###########
# Slept w  ITN in rural versus urban settings
ITNchild.Res.SRS <- svyby(~Slept_ITN, ~HH_residence, ChildDHS_SRS_wtd, svymean, na.rm=TRUE) #Residence
ITNchild.Res.SRS
#Slept ITN by mother's education level
ITN.mEdu.SRS<- svyby(~Slept_ITN, ~Mother_education, ChildDHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.mEdu.SRS
#Slept ITN by  SES level
ITN.childSES.SRS<- svyby(~Slept_ITN, ~HH_wealth_index, ChildDHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.childSES.SRS
#Slept ITN by  child age
ITN.childage.SRS<- svyby(~Slept_ITN, ~Child_age, ChildDHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.childage.SRS
#Has slept ITN total
cTotal.SRS.wtd <- svymean(~Slept_ITN,ChildDHS_SRS_wtd)
cTotal.SRS.wtd
########## ZAMBIA_HH DATA SET#############
# Has ITN in rural versus urban settings
Elect.Res.SRS <- svyby(~HH_has_ITN, ~HH_residence, DHS_SRS_wtd, svymean, na.rm=TRUE) #Residence
Elect.Res.SRS
#Has ITN by education level
ITN.Edu.SRS<- svyby(~HH_has_ITN, ~HH_head_education, DHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.Edu.SRS
#Has ITN by  SES level
ITN.SES.SRS<- svyby(~HH_has_ITN, ~HH_wealth_index, DHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.SES.SRS
#Has ITN total
Total.SRS.wtd <- svymean(~HH_has_ITN,DHS_SRS_wtd)
Total.SRS.wtd
######### Zambia_Child Data set###########
# Slept w  ITN in rural versus urban settings
ITNchild.Res.SRS <- svyby(~Slept_ITN, ~HH_residence, ChildDHS_SRS_wtd, svymean, na.rm=TRUE) #Residence
ITNchild.Res.SRS
#Slept ITN by mother's education level
ITN.mEdu.SRS<- svyby(~Slept_ITN, ~Mother_education, ChildDHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.mEdu.SRS
#Slept ITN by  SES level
ITN.childSES.SRS<- svyby(~Slept_ITN, ~HH_wealth_index, ChildDHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.childSES.SRS
#Slept ITN by  child age
ITN.childage.SRS<- svyby(~Slept_ITN, ~Child_age, ChildDHS_SRS_wtd, svymean, na.rm=TRUE)
ITN.childage.SRS
#Has slept ITN total
cTotal.SRS.wtd <- svymean(~Slept_ITN,ChildDHS_SRS_wtd)
cTotal.SRS.wtd
DHS_Clstr_wtd<-svydesign(ids= ~Primary_sampling_unit, weights=~pw,data=Zambia_HH, nest=TRUE)
childDHS_Clstr_wtd<-svydesign(ids= ~Primary_sampling_unit, weights=~pw,data=Zambia_child, nest=TRUE)
####### ZAMBIA HH DATA SET ##########
# Has ITN in rural versus urban settings
ITN.Res.Clstr <- svyby(~HH_has_ITN, ~HH_residence, DHS_Clstr_wtd, svymean, na.rm=TRUE) #Residence
ITN.Res.Clstr
#Has ITN by education level
ITN.Edu.Clstr<- svyby(~HH_has_ITN, ~HH_head_education, DHS_Clstr_wtd, svymean, na.rm=TRUE)
ITN.Edu.Clstr
#Has ITN by SES level
ITN.SES.Clstr<- svyby(~HH_has_ITN, ~HH_wealth_index, DHS_Clstr_wtd, svymean, na.rm=TRUE)
ITN.SES.Clstr
#Has ITN total
Total.SRS.wtd <- svymean(~HH_has_ITN,DHS_Clstr_wtd)
Total.SRS.wtd
########### Zambia_Child Data Set ###################
# Slept ITN in rural versus urban settings
childITN.Res.Clstr <- svyby(~Slept_ITN, ~HH_residence, childDHS_Clstr_wtd, svymean, na.rm=TRUE) #Residence
childITN.Res.Clstr
#Slept ITN by mother education level
ITN.mEdu.Clstr<- svyby(~Slept_ITN, ~Mother_education, childDHS_Clstr_wtd, svymean, na.rm=TRUE)
ITN.mEdu.Clstr
#Slept ITN by SES level
childITN.SES.Clstr<- svyby(~Slept_ITN, ~HH_wealth_index, childDHS_Clstr_wtd, svymean, na.rm=TRUE)
childITN.SES.Clstr
#Slept ITN by Child age
ITN.childage.Clstr<- svyby(~Slept_ITN, ~Child_age, childDHS_Clstr_wtd, svymean, na.rm=TRUE)
ITN.childage.Clstr
#Has ITN total
childTotal.Clstr <- svymean(~Slept_ITN,childDHS_Clstr_wtd)
childTotal.Clstr
DHS_Clstr_strat <-svydesign(ids= ~Primary_sampling_unit, strata= ~Sample_stratum_number, weights=~pw,data=Zambia_HH, nest=TRUE)
cDHS_Clstr_strat <-svydesign(ids= ~Primary_sampling_unit, strata= ~Sample_stratum_number, weights=~pw,data=Zambia_child, nest=TRUE)
#note here that we have not specified 2-stage cluster sampling. As multistage sampling has no effect when fpc is not provided (for example with this data set), we do not need to specific 2-stage cluster sampling here when defining our "ids".
####ZAMBIA HH DATA SET#######
ITN.Res.Strat <- svyby(~HH_has_ITN, ~HH_residence, DHS_Clstr_strat, svymean, na.rm=TRUE) #Residence
ITN.Res.Strat
ITN.Edu.Strat <- svyby(~HH_has_ITN, ~HH_head_education, DHS_Clstr_strat, svymean, na.rm=TRUE) #Education level
ITN.Edu.Strat
#Has ITN by SES level
ITN.SES.Strat<- svyby(~HH_has_ITN, ~HH_wealth_index, DHS_Clstr_strat, svymean, na.rm=TRUE)
ITN.SES.Strat
#Has ITN total
Total.SRS.Strat <- svymean(~HH_has_ITN,DHS_Clstr_wtd)
Total.SRS.Strat
####### ZAMBIA CHILD DATA SET
#Residence
cITN.Res.Strat <- svyby(~Slept_ITN, ~HH_residence, cDHS_Clstr_strat, svymean, na.rm=TRUE) #Residence
cITN.Res.Strat
#mothers Education level
cITN.Edu.Strat <- svyby(~Slept_ITN, ~Mother_education, cDHS_Clstr_strat, svymean, na.rm=TRUE)
cITN.Edu.Strat
#slept ITN by SES level
cITN.SES.Strat<- svyby(~Slept_ITN, ~HH_wealth_index, cDHS_Clstr_strat, svymean, na.rm=TRUE)
cITN.SES.Strat
#slept ITN by child age
cITN.childage.Strat<- svyby(~Slept_ITN, ~Child_age, cDHS_Clstr_strat, svymean, na.rm=TRUE)
cITN.childage.Strat
#slept ITN total
cTotal.SRS.Strat <- svymean(~Slept_ITN, cDHS_Clstr_wtd)
####### ZAMBIA CHILD DATA SET
#Residence
cITN.Res.Strat <- svyby(~Slept_ITN, ~HH_residence, cDHS_Clstr_strat, svymean, na.rm=TRUE) #Residence
cITN.Res.Strat
#mothers Education level
cITN.Edu.Strat <- svyby(~Slept_ITN, ~Mother_education, cDHS_Clstr_strat, svymean, na.rm=TRUE)
cITN.Edu.Strat
#slept ITN by SES level
cITN.SES.Strat<- svyby(~Slept_ITN, ~HH_wealth_index, cDHS_Clstr_strat, svymean, na.rm=TRUE)
cITN.SES.Strat
#slept ITN by child age
cITN.childage.Strat<- svyby(~Slept_ITN, ~Child_age, cDHS_Clstr_strat, svymean, na.rm=TRUE)
cITN.childage.Strat
#slept ITN total
cTotal.SRS.Strat <- svymean(~Slept_ITN, cDHS_Clstr_strat)
cTotal.SRS.Strat
